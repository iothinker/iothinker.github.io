<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HA江苏电费插件</title>
      <link href="2021/04/06/jsdf/"/>
      <url>2021/04/06/jsdf/</url>
      
        <content type="html"><![CDATA[<h3 id="0-前言介绍"><a href="#0-前言介绍" class="headerlink" title="0.前言介绍"></a>0.前言介绍</h3><hr><p>之前一直想把水电燃气都接入HA，水和燃气都接入了，电费一直没有接入。一开始尝试网上抓包，有个变量没摸透它的规律，所以没办法入手。后面发现小程序也可以查电费，所以准备从小程序入手，抓包看看能不能够有什么发现。</p><h3 id="1-抓包准备"><a href="#1-抓包准备" class="headerlink" title="1.抓包准备"></a>1.抓包准备</h3><hr><p>搜索微信小程序 <strong>国网江苏电力营业厅</strong> 抓下包。抓包的工具可以使用 <strong>Fiddler</strong>  苹果手机上可以使用 <strong>Stream</strong> 都是挺好用的。</p><h3 id="2-抓包"><a href="#2-抓包" class="headerlink" title="2.抓包"></a>2.抓包</h3><hr><p>在抓包的结果中找找有没有哪个返回金额等相关数据的。找了找，找到了 <strong><a href="https://weixin.js.sgcc.com.cn/wxapp_dlsh/wx/oauth_executeNewMini.do?openid=xxxxxxxxx&amp;timestamp=xxxxx&amp;noncestr=xxxxxxx&amp;sign=xxxxxxxx&amp;unionid=xxxxxxx&amp;userInfo=null">https://weixin.js.sgcc.com.cn/wxapp_dlsh/wx/oauth_executeNewMini.do?openid=xxxxxxxxx&amp;timestamp=xxxxx&amp;noncestr=xxxxxxx&amp;sign=xxxxxxxx&amp;unionid=xxxxxxx&amp;userInfo=null</a></strong> 这个地址。通过多次对比这个链接，发现  </p><p><strong>openid=xxxxxxxxx   //固定的</strong><br><strong>timestamp=xxxxx</strong>   <strong>// 变动的</strong></p><p><strong>noncestr=xxxxxxx</strong>  <strong>//变动的</strong><br><strong>sign=xxxxxxxx      // 变动的</strong><br><strong>unionid=xxxxxxx</strong>    <strong>//固定的</strong></p><p><strong>timestamp</strong> <strong>noncestr</strong> <strong>sign</strong> 这三个参数是有关联关系，不能够随意改动。这个地址的返回结果中也会返回这三个字段，所以我们不必考虑他们之间的关系，再次调用是，把之前的参数替换成现在最新的即可。</p><h3 id="3-编写插件"><a href="#3-编写插件" class="headerlink" title="3.编写插件"></a>3.编写插件</h3><hr><p>分析到上面那步之后插件写起来就简单了，其实就是解析参数赋值的事情了。代码如下:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">"""Support for guojiadianwang# Author:    freefitter# Created:    2020/9/2"""</span><span class="token keyword">import</span> logging<span class="token keyword">import</span> json<span class="token keyword">import</span> configparser<span class="token keyword">import</span> time<span class="token punctuation">,</span> datetime<span class="token keyword">from</span> dateutil<span class="token punctuation">.</span>relativedelta <span class="token keyword">import</span> relativedelta <span class="token keyword">from</span> homeassistant<span class="token punctuation">.</span>const <span class="token keyword">import</span> <span class="token punctuation">(</span>    CONF_API_KEY<span class="token punctuation">,</span> CONF_NAME<span class="token punctuation">,</span> ATTR_ATTRIBUTION<span class="token punctuation">,</span> CONF_ID    <span class="token punctuation">)</span><span class="token keyword">from</span> homeassistant<span class="token punctuation">.</span>helpers<span class="token punctuation">.</span>entity <span class="token keyword">import</span> Entity<span class="token keyword">import</span> homeassistant<span class="token punctuation">.</span>helpers<span class="token punctuation">.</span>config_validation <span class="token keyword">as</span> cv<span class="token keyword">import</span> voluptuous <span class="token keyword">as</span> vol<span class="token keyword">from</span> homeassistant<span class="token punctuation">.</span>components<span class="token punctuation">.</span>sensor <span class="token keyword">import</span> PLATFORM_SCHEMA<span class="token keyword">import</span> requests<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup_Log<span class="token operator">=</span>logging<span class="token punctuation">.</span>getLogger<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>DEFAULT_NAME <span class="token operator">=</span> <span class="token string">'gjdw'</span>OPENID <span class="token operator">=</span> <span class="token string">'openid'</span>NONCESTR <span class="token operator">=</span> <span class="token string">'noncestr'</span>SIGN <span class="token operator">=</span> <span class="token string">'sign'</span>UNIONID <span class="token operator">=</span> <span class="token string">'unionid'</span>TIMESTAMP1 <span class="token operator">=</span> <span class="token string">'timestamp'</span>PLATFORM_SCHEMA <span class="token operator">=</span> PLATFORM_SCHEMA<span class="token punctuation">.</span>extend<span class="token punctuation">(</span><span class="token punctuation">{</span>vol<span class="token punctuation">.</span>Required<span class="token punctuation">(</span>OPENID<span class="token punctuation">)</span><span class="token punctuation">:</span> cv<span class="token punctuation">.</span>string<span class="token punctuation">,</span>vol<span class="token punctuation">.</span>Required<span class="token punctuation">(</span>NONCESTR<span class="token punctuation">)</span><span class="token punctuation">:</span> cv<span class="token punctuation">.</span>string<span class="token punctuation">,</span>vol<span class="token punctuation">.</span>Required<span class="token punctuation">(</span>SIGN<span class="token punctuation">)</span><span class="token punctuation">:</span> cv<span class="token punctuation">.</span>string<span class="token punctuation">,</span>vol<span class="token punctuation">.</span>Required<span class="token punctuation">(</span>UNIONID<span class="token punctuation">)</span><span class="token punctuation">:</span> cv<span class="token punctuation">.</span>string<span class="token punctuation">,</span>vol<span class="token punctuation">.</span>Required<span class="token punctuation">(</span>TIMESTAMP1<span class="token punctuation">)</span><span class="token punctuation">:</span> cv<span class="token punctuation">.</span>string<span class="token punctuation">,</span>    vol<span class="token punctuation">.</span>Optional<span class="token punctuation">(</span>CONF_NAME<span class="token punctuation">,</span> default<span class="token operator">=</span> DEFAULT_NAME<span class="token punctuation">)</span><span class="token punctuation">:</span> cv<span class="token punctuation">.</span>string<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span>HEADERS <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'Host'</span><span class="token punctuation">:</span> <span class="token string">'weixin.js.sgcc.com.cn'</span><span class="token punctuation">,</span>    <span class="token string">'Connection'</span><span class="token punctuation">:</span>  <span class="token string">'keep-alive'</span><span class="token punctuation">,</span>    <span class="token string">'Content-Length'</span><span class="token punctuation">:</span> <span class="token string">'0'</span><span class="token punctuation">,</span>    <span class="token string">'content-type'</span><span class="token punctuation">:</span> <span class="token string">'application/json'</span><span class="token punctuation">,</span>    <span class="token string">'Accept-Encoding'</span><span class="token punctuation">:</span> <span class="token string">'gzip,compress,br,deflate'</span><span class="token punctuation">,</span>    <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (iPhone; CPU iPhone OS 14_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 MicroMessenger/8.0.0(0x18000026) NetType/WIFI Language/zh_CN'</span><span class="token punctuation">,</span>    <span class="token string">'Referer'</span><span class="token punctuation">:</span> <span class="token string">'https://servicewechat.com/wx203b37ad2ad5d2a6/32/page-frame.html'</span><span class="token punctuation">,</span><span class="token punctuation">}</span>API_URL <span class="token operator">=</span> <span class="token string">"https://weixin.js.sgcc.com.cn/wxapp_dlsh/wx/oauth_executeNewMini.do"</span><span class="token keyword">def</span> <span class="token function">setup_platform</span><span class="token punctuation">(</span>hass<span class="token punctuation">,</span> config<span class="token punctuation">,</span> add_devices<span class="token punctuation">,</span> discovery_info<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    sensor_name <span class="token operator">=</span> config<span class="token punctuation">.</span>get<span class="token punctuation">(</span>CONF_NAME<span class="token punctuation">)</span>    openid <span class="token operator">=</span> config<span class="token punctuation">.</span>get<span class="token punctuation">(</span>OPENID<span class="token punctuation">)</span>    unionid <span class="token operator">=</span> config<span class="token punctuation">.</span>get<span class="token punctuation">(</span>UNIONID<span class="token punctuation">)</span>    cfg <span class="token operator">=</span> configparser<span class="token punctuation">.</span>ConfigParser<span class="token punctuation">(</span><span class="token punctuation">)</span>    cfg<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token string">'param.ini'</span><span class="token punctuation">)</span>    timestamp1 <span class="token operator">=</span> cfg<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'Param'</span><span class="token punctuation">,</span> <span class="token string">'timestamp'</span><span class="token punctuation">)</span>    noncestr <span class="token operator">=</span> cfg<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'Param'</span><span class="token punctuation">,</span> <span class="token string">'noncestr'</span><span class="token punctuation">)</span>    sign <span class="token operator">=</span> cfg<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'Param'</span><span class="token punctuation">,</span> <span class="token string">'sign'</span><span class="token punctuation">)</span>        url <span class="token operator">=</span> API_URL <span class="token operator">+</span> <span class="token string">"?openid="</span> <span class="token operator">+</span> openid <span class="token operator">+</span><span class="token string">"&amp;timestamp="</span> <span class="token operator">+</span> timestamp1 <span class="token operator">+</span> <span class="token string">"&amp;noncestr="</span> <span class="token operator">+</span> noncestr <span class="token operator">+</span> <span class="token string">"&amp;sign="</span> <span class="token operator">+</span> sign <span class="token operator">+</span> <span class="token string">"&amp;unionid="</span> <span class="token operator">+</span> unionid <span class="token operator">+</span> <span class="token string">"&amp;userInfo=null"</span>        _Log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">"url:"</span> <span class="token operator">+</span> url <span class="token punctuation">)</span>    add_devices<span class="token punctuation">(</span><span class="token punctuation">[</span>GJDW<span class="token punctuation">(</span>sensor_name<span class="token punctuation">,</span>url<span class="token punctuation">,</span>openid<span class="token punctuation">,</span>unionid<span class="token punctuation">,</span>cfg<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">GJDW</span><span class="token punctuation">(</span>Entity<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Representation of a guojiadianwang """</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>sensor_name<span class="token punctuation">,</span>url<span class="token punctuation">,</span>openid<span class="token punctuation">,</span>unionid<span class="token punctuation">,</span>cfg<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>attributes <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>        self<span class="token punctuation">.</span>_state <span class="token operator">=</span> <span class="token boolean">None</span>        self<span class="token punctuation">.</span>_name <span class="token operator">=</span> sensor_name        self<span class="token punctuation">.</span>_url <span class="token operator">=</span> url        self<span class="token punctuation">.</span>_openid <span class="token operator">=</span> openid        self<span class="token punctuation">.</span>_unionid <span class="token operator">=</span> unionid        self<span class="token punctuation">.</span>_cfg <span class="token operator">=</span> cfg    <span class="token decorator annotation punctuation">@property</span>    <span class="token keyword">def</span> <span class="token function">name</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""Return the name of the sensor."""</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>_name    <span class="token decorator annotation punctuation">@property</span>    <span class="token keyword">def</span> <span class="token function">state</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""Return the state of the sensor."""</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>_state    <span class="token decorator annotation punctuation">@property</span>    <span class="token keyword">def</span> <span class="token function">icon</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""   mdi   ."""</span>        <span class="token keyword">return</span> <span class="token string">'mdi:flash'</span>    <span class="token decorator annotation punctuation">@property</span>    <span class="token keyword">def</span> <span class="token function">device_state_attributes</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""Return the state attributes."""</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>attributes    <span class="token decorator annotation punctuation">@property</span>    <span class="token keyword">def</span> <span class="token function">unit_of_measurement</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""Return the unit this state is expressed in."""</span>        <span class="token keyword">return</span> <span class="token string">"元"</span>    <span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token triple-quoted-string string">"""_Log.error("url:" + self._url)"""</span>            response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>self<span class="token punctuation">.</span>_url<span class="token punctuation">,</span>headers <span class="token operator">=</span> HEADERS<span class="token punctuation">)</span>        <span class="token keyword">except</span> ReadTimeout<span class="token punctuation">:</span>            _Log<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">"Connection timeout...."</span><span class="token punctuation">)</span>        <span class="token keyword">except</span> ConnectionError<span class="token punctuation">:</span>            _Log<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">"Connection Error...."</span><span class="token punctuation">)</span>        <span class="token keyword">except</span> RequestException<span class="token punctuation">:</span>            _Log<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">"Unknown Error"</span><span class="token punctuation">)</span>        res <span class="token operator">=</span> response<span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> res<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">"html"</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token punctuation">:</span>            _Log<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">"参数存在问题,请重新抓包填写"</span><span class="token punctuation">)</span>            <span class="token keyword">return</span>            <span class="token triple-quoted-string string">"""_Log.error(res)"""</span>        ret <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>res<span class="token punctuation">)</span>        <span class="token keyword">if</span> ret<span class="token punctuation">[</span><span class="token string">"errcode"</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"0000"</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> <span class="token string">"owe_amt"</span> <span class="token keyword">in</span> ret<span class="token punctuation">[</span><span class="token string">"yeModel"</span><span class="token punctuation">]</span> <span class="token punctuation">:</span>                self<span class="token punctuation">.</span>_state <span class="token operator">=</span> <span class="token builtin">round</span><span class="token punctuation">(</span><span class="token builtin">float</span><span class="token punctuation">(</span>ret<span class="token punctuation">[</span><span class="token string">"yeModel"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"owe_amt"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>                self<span class="token punctuation">.</span>attributes<span class="token punctuation">[</span><span class="token string">'rca_flag'</span><span class="token punctuation">]</span> <span class="token operator">=</span> ret<span class="token punctuation">[</span><span class="token string">"yeModel"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"rca_flag"</span><span class="token punctuation">]</span>                self<span class="token punctuation">.</span>attributes<span class="token punctuation">[</span><span class="token string">'cur_amt'</span><span class="token punctuation">]</span> <span class="token operator">=</span> ret<span class="token punctuation">[</span><span class="token string">"yeModel"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"cur_amt"</span><span class="token punctuation">]</span>                curfeeMsg <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>ret<span class="token punctuation">[</span><span class="token string">"curfee"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                self<span class="token punctuation">.</span>attributes<span class="token punctuation">[</span><span class="token string">'ymd'</span><span class="token punctuation">]</span> <span class="token operator">=</span> curfeeMsg<span class="token punctuation">[</span><span class="token string">"ymd"</span><span class="token punctuation">]</span>                self<span class="token punctuation">.</span>attributes<span class="token punctuation">[</span><span class="token string">'totalMoney'</span><span class="token punctuation">]</span> <span class="token operator">=</span> curfeeMsg<span class="token punctuation">[</span><span class="token string">"totalMoney"</span><span class="token punctuation">]</span>                self<span class="token punctuation">.</span>attributes<span class="token punctuation">[</span><span class="token string">'powerSum'</span><span class="token punctuation">]</span> <span class="token operator">=</span> curfeeMsg<span class="token punctuation">[</span><span class="token string">"powerSum"</span><span class="token punctuation">]</span>                dbObjMsg <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>ret<span class="token punctuation">[</span><span class="token string">"dbObj"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                self<span class="token punctuation">.</span>attributes<span class="token punctuation">[</span><span class="token string">'stepNo'</span><span class="token punctuation">]</span> <span class="token operator">=</span> dbObjMsg<span class="token punctuation">[</span><span class="token string">"stepNo"</span><span class="token punctuation">]</span>                self<span class="token punctuation">.</span>attributes<span class="token punctuation">[</span><span class="token string">'yearAmount'</span><span class="token punctuation">]</span> <span class="token operator">=</span> dbObjMsg<span class="token punctuation">[</span><span class="token string">"yearAmount"</span><span class="token punctuation">]</span>                self<span class="token punctuation">.</span>attributes<span class="token punctuation">[</span><span class="token string">'isUpdated'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'yes'</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>attributes<span class="token punctuation">[</span><span class="token string">'rca_flag'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'-1'</span>            self<span class="token punctuation">.</span>attributes<span class="token punctuation">[</span><span class="token string">'cur_amt'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'-1'</span>            self<span class="token punctuation">.</span>attributes<span class="token punctuation">[</span><span class="token string">'isUpdated'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'no'</span>            <span class="token comment">#_Log.error("yeModel is null !")</span>            <span class="token comment"># 更新url参数 </span>            url <span class="token operator">=</span> API_URL <span class="token operator">+</span> <span class="token string">"?openid="</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>_openid <span class="token operator">+</span><span class="token string">"&amp;timestamp="</span> <span class="token operator">+</span> ret<span class="token punctuation">[</span><span class="token string">"timestamp"</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">"&amp;noncestr="</span> <span class="token operator">+</span> ret<span class="token punctuation">[</span><span class="token string">"noncestr"</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">"&amp;sign="</span> <span class="token operator">+</span> ret<span class="token punctuation">[</span><span class="token string">"sign"</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">"&amp;unionid="</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>_unionid <span class="token operator">+</span> <span class="token string">"&amp;userInfo=null"</span>             self<span class="token punctuation">.</span>_url <span class="token operator">=</span> url            <span class="token comment"># 保存参数至文本</span>            self<span class="token punctuation">.</span>_cfg<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token string">"Param"</span><span class="token punctuation">,</span> <span class="token string">"timestamp"</span><span class="token punctuation">,</span> ret<span class="token punctuation">[</span><span class="token string">"timestamp"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>_cfg<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token string">"Param"</span><span class="token punctuation">,</span> <span class="token string">"noncestr"</span><span class="token punctuation">,</span> ret<span class="token punctuation">[</span><span class="token string">"noncestr"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>_cfg<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token string">"Param"</span><span class="token punctuation">,</span> <span class="token string">"sign"</span><span class="token punctuation">,</span> ret<span class="token punctuation">[</span><span class="token string">"sign"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>_cfg<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'param.ini'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            _Log<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">"send request error...."</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果重启会导致参数失效，所以插件把变动的参数保存了下来，每次插件更新的时候将相关的参数更新进去，这样重启时间不长的话就不需要重新抓包了。</p><h3 id="4-HA配置"><a href="#4-HA配置" class="headerlink" title="4.HA配置"></a>4.HA配置</h3><hr><p>在配置文件中加上如下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">-</span> <span class="token key atrule">platform</span><span class="token punctuation">:</span> gjdw<span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">'电费'</span><span class="token key atrule">openid</span><span class="token punctuation">:</span> <span class="token string">'xxxxxxxxx-xxxxxxxxx'</span><span class="token key atrule">noncestr</span><span class="token punctuation">:</span> <span class="token string">'xxxxxxxxx'</span><span class="token key atrule">sign</span><span class="token punctuation">:</span> <span class="token string">'xxxxxxxxx'</span><span class="token key atrule">unionid</span><span class="token punctuation">:</span> <span class="token string">'xxxxxxxxx'</span><span class="token key atrule">timestamp</span><span class="token punctuation">:</span> <span class="token string">'xxxxxxxxx'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>增加  <strong>param.ini</strong> 配置文件，文件内容如下</p><pre class="line-numbers language-ini" data-language="ini"><code class="language-ini"><span class="token selector">[Param]</span><span class="token constant">timestamp</span> <span class="token attr-value"><span class="token punctuation">=</span> xxxxxxxxx</span><span class="token constant">noncestr</span> <span class="token attr-value"><span class="token punctuation">=</span> xxxxxxxxx</span><span class="token constant">sign</span> <span class="token attr-value"><span class="token punctuation">=</span> xxxxxxxxx</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-成果展示与插件下载"><a href="#5-成果展示与插件下载" class="headerlink" title="5.成果展示与插件下载"></a>5.成果展示与插件下载</h3><hr><p><img src="/img/20210406/dianfei.png" alt="插件展示"></p><p>如果需要下载插件的话，可以去论坛我发的 <a href="https://bbs.hassbian.com/thread-12037-1-1.html"><strong>电费插件-这次应该全国通用了吧</strong></a> 帖子下载。</p><h3 id="6-结语"><a href="#6-结语" class="headerlink" title="6.结语"></a>6.结语</h3><p>自己写写插件还是挺好玩的，最近玩了玩Node-Red和MQTT，感觉这个搞插件还是快的。有几个写好的插件可以先看看，抓了美食杰和微博热搜的数据</p><p><img src="/img/20210406/info.png" alt="MQTT插件展示"></p>]]></content>
      
      
      <categories>
          
          <category> 智能家居 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HA </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小长假游记</title>
      <link href="2021/04/05/jq-2021-qm/"/>
      <url>2021/04/05/jq-2021-qm/</url>
      
        <content type="html"><![CDATA[<h3 id="0-假期安排"><a href="#0-假期安排" class="headerlink" title="0.假期安排"></a>0.假期安排</h3><p>​    三天的小长假，回家祭祖顺便带小孩玩玩。</p><h3 id="1-第一天"><a href="#1-第一天" class="headerlink" title="1.第一天"></a>1.第一天</h3><p>​     早上早早起床，想着早点走路上不会堵车，奈何走的还是不够早，9:00了才出门。在出城的路上还是堵了一会的，上了高速后就好了很多了。回去之后已经中午了，去喝了个鸭汤就回去休息了。鸭汤没有之前的好喝了，门面也变小了。[ 图片网上找的，还是之前的店面 ]</p><p><img src="/img/20210405/jangmuya0.jpg" alt="老鸭汤的店"></p><p>下午彤妈约了闺蜜出去玩，我就和彤宝一起睡觉休息了。这一睡就到4点多了。起来弄弄之后，去接彤妈之后，顺便带彤彤见见她的阿姨们。接着晚上又是一个小饭局。</p><h3 id="2-第二天"><a href="#2-第二天" class="headerlink" title="2.第二天"></a>2.第二天</h3><p>​    今天是清明，怕路上堵，早点起床回老家祭祖。回家的路上还好，不是特别的堵。早早就到家了。到了老家小家伙就开始挖挖土了。</p><p><img src="/img/20210405/IMG_1567.jpg" alt="爱挖土宝宝0"><img src="/img/20210405/IMG_1568.jpg" alt="爱挖土宝宝1"></p><p>​    祭祖后休息了一下，约了小伙伴一起遛娃。去了一个之前一直想去但是没去的地方，天气和风景都不错。彤宝到了之后还是先挖土<span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>。</p><p><img src="/img/20210405/IMG_1572.jpg" alt="爱挖土宝宝2"></p><p>之前小伙伴的宝宝在睡觉，没能一起参与，好在一会他就醒了，然后捡了个风筝，就一起玩了起来了。</p><p><img src="/img/20210405/yiqi.jpg" alt="一起放风筝"></p><h3 id="3-最后一天"><a href="#3-最后一天" class="headerlink" title="3.最后一天"></a>3.最后一天</h3><p>​    很快就要和小长假说拜拜了。最后一天要早点回南京，回去给他做点面包和饺子，这样平时可以吃吃。本来想着中午早点走回不堵的，事与愿违，依然堵。走的早些时间也充裕些。回家就开始干活了，一下是牛角包的成果图，还是可以的。饺子的图没拍。下次争取都图。</p><p><img src="/img/20210405/njb.jpg" alt="牛角包"></p><h3 id="4-总结"><a href="#4-总结" class="headerlink" title="4.总结"></a>4.总结</h3><p>   三天的小长假还算快乐，期待下次的游记。<span class="github-emoji"><span>😆</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游玩 </tag>
            
            <tag> 遛娃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HA南京水费插件</title>
      <link href="2021/04/02/njwater/"/>
      <url>2021/04/02/njwater/</url>
      
        <content type="html"><![CDATA[<h3 id="0-插件准备"><a href="#0-插件准备" class="headerlink" title="0.插件准备"></a>0.插件准备</h3><p>a) 登录<a href="http://www.jlwater.com/login.html">南京水务</a>的官网</p><p>b) 按住F12进入开发者模式</p><p>c) 拿到cookie和客户号</p><p>结果如图：</p><p><img src="/img/njwater/njwater01.png" alt="结果截图"></p><h3 id="1-配置HA"><a href="#1-配置HA" class="headerlink" title="1.配置HA"></a>1.配置HA</h3><p>将自定义插件上传到对应的目录下</p><p>custom_components<br>└─nanjing_water<br>        sensor.py<br>        __init__.py</p><p>接着在 configuration.yaml 中添加</p><p><strong>sensor:</strong></p><p>  <strong>- platform: nanjing_water</strong><br>     <strong>name: ‘水费’</strong><br>     <strong>custno: ‘XXXXX’</strong><br>     <strong>cookies: ‘XXXXXXXXXXXXXX’</strong></p><h3 id="2-重启HA"><a href="#2-重启HA" class="headerlink" title="2.重启HA"></a>2.重启HA</h3><h3 id="3-结果展示"><a href="#3-结果展示" class="headerlink" title="3.结果展示"></a>3.结果展示</h3><p><img src="/img/njwater/njwater02.png" alt="结果截图"></p><h3 id="4-代码展示"><a href="#4-代码展示" class="headerlink" title="4.代码展示"></a>4.代码展示</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">"""Support for nanjing water# Author: freefitter# Created: 2019-08-21"""</span><span class="token keyword">import</span> logging<span class="token keyword">from</span> homeassistant<span class="token punctuation">.</span>const <span class="token keyword">import</span> <span class="token punctuation">(</span>    CONF_API_KEY<span class="token punctuation">,</span> CONF_NAME<span class="token punctuation">,</span> ATTR_ATTRIBUTION<span class="token punctuation">,</span> CONF_ID    <span class="token punctuation">)</span><span class="token keyword">from</span> homeassistant<span class="token punctuation">.</span>helpers<span class="token punctuation">.</span>entity <span class="token keyword">import</span> Entity<span class="token keyword">import</span> homeassistant<span class="token punctuation">.</span>helpers<span class="token punctuation">.</span>config_validation <span class="token keyword">as</span> cv<span class="token keyword">import</span> voluptuous <span class="token keyword">as</span> vol<span class="token keyword">from</span> homeassistant<span class="token punctuation">.</span>components<span class="token punctuation">.</span>sensor <span class="token keyword">import</span> PLATFORM_SCHEMA<span class="token keyword">import</span> requests<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup_Log<span class="token operator">=</span>logging<span class="token punctuation">.</span>getLogger<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>DEFAULT_NAME <span class="token operator">=</span> <span class="token string">'nanjing_water'</span>COOKIES <span class="token operator">=</span> <span class="token string">'cookies'</span>CUSTNO <span class="token operator">=</span> <span class="token string">'custno'</span>PLATFORM_SCHEMA <span class="token operator">=</span> PLATFORM_SCHEMA<span class="token punctuation">.</span>extend<span class="token punctuation">(</span><span class="token punctuation">{</span>    vol<span class="token punctuation">.</span>Required<span class="token punctuation">(</span>COOKIES<span class="token punctuation">)</span><span class="token punctuation">:</span> cv<span class="token punctuation">.</span>string<span class="token punctuation">,</span>    vol<span class="token punctuation">.</span>Required<span class="token punctuation">(</span>CUSTNO<span class="token punctuation">)</span><span class="token punctuation">:</span> cv<span class="token punctuation">.</span>string<span class="token punctuation">,</span>    vol<span class="token punctuation">.</span>Optional<span class="token punctuation">(</span>CONF_NAME<span class="token punctuation">,</span> default<span class="token operator">=</span> DEFAULT_NAME<span class="token punctuation">)</span><span class="token punctuation">:</span> cv<span class="token punctuation">.</span>string<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span>HEADERS <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'Connection'</span><span class="token punctuation">:</span> <span class="token string">'keep-alive'</span><span class="token punctuation">,</span>    <span class="token string">'Upgrade-Insecure-Requests'</span><span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>    <span class="token string">'Accept'</span><span class="token punctuation">:</span> <span class="token string">'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'</span><span class="token punctuation">,</span>    <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (iPhone; CPU iPhone OS 12_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 MicroMessenger/7.0.5(0x17000523) NetType/WIFI Language/zh_CN'</span><span class="token punctuation">,</span>    <span class="token string">'Referer'</span><span class="token punctuation">:</span> <span class="token string">'http://www.jlwater.com/waterFee/waterWx'</span><span class="token punctuation">,</span>    <span class="token string">'Accept-Language'</span><span class="token punctuation">:</span> <span class="token string">'zh-cn'</span><span class="token punctuation">,</span>    <span class="token string">'Accept-Encoding'</span><span class="token punctuation">:</span> <span class="token string">'gzip, deflate'</span><span class="token punctuation">}</span>API_URL <span class="token operator">=</span> <span class="token string">"http://www.jlwater.com/waterFee/detail"</span><span class="token keyword">def</span> <span class="token function">setup_platform</span><span class="token punctuation">(</span>hass<span class="token punctuation">,</span> config<span class="token punctuation">,</span> add_devices<span class="token punctuation">,</span> discovery_info<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    cookies <span class="token operator">=</span> config<span class="token punctuation">.</span>get<span class="token punctuation">(</span>COOKIES<span class="token punctuation">)</span>    custno <span class="token operator">=</span> config<span class="token punctuation">.</span>get<span class="token punctuation">(</span>CUSTNO<span class="token punctuation">)</span>    sensor_name <span class="token operator">=</span> config<span class="token punctuation">.</span>get<span class="token punctuation">(</span>CONF_NAME<span class="token punctuation">)</span>    query_dict <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'consNo'</span><span class="token punctuation">:</span> custno<span class="token punctuation">,</span>    <span class="token punctuation">}</span>    HEADERS<span class="token punctuation">[</span><span class="token string">"Cookie"</span><span class="token punctuation">]</span> <span class="token operator">=</span> cookies    add_devices<span class="token punctuation">(</span><span class="token punctuation">[</span>NanjingWater<span class="token punctuation">(</span>sensor_name<span class="token punctuation">,</span>query_dict<span class="token punctuation">,</span>cookies<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">NanjingWater</span><span class="token punctuation">(</span>Entity<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Representation of a Nanjing water """</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>sensor_name<span class="token punctuation">,</span>query_dict<span class="token punctuation">,</span>cookies<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>attributes <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>        self<span class="token punctuation">.</span>_state <span class="token operator">=</span> <span class="token boolean">None</span>        self<span class="token punctuation">.</span>_query_dict <span class="token operator">=</span> query_dict        self<span class="token punctuation">.</span>_name <span class="token operator">=</span> sensor_name        self<span class="token punctuation">.</span>_cookies <span class="token operator">=</span> cookies    <span class="token decorator annotation punctuation">@property</span>    <span class="token keyword">def</span> <span class="token function">name</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""Return the name of the sensor."""</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>_name    <span class="token decorator annotation punctuation">@property</span>    <span class="token keyword">def</span> <span class="token function">state</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""Return the state of the sensor."""</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>_state    <span class="token decorator annotation punctuation">@property</span>    <span class="token keyword">def</span> <span class="token function">icon</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""返回mdi图标."""</span>        <span class="token keyword">return</span> <span class="token string">'mdi:cup-water'</span>    <span class="token decorator annotation punctuation">@property</span>    <span class="token keyword">def</span> <span class="token function">device_state_attributes</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""Return the state attributes."""</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>attributes    <span class="token decorator annotation punctuation">@property</span>    <span class="token keyword">def</span> <span class="token function">unit_of_measurement</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""Return the unit this state is expressed in."""</span>        <span class="token keyword">return</span> <span class="token string">"元"</span>    <span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>API_URL<span class="token punctuation">,</span>params<span class="token operator">=</span>self<span class="token punctuation">.</span>_query_dict<span class="token punctuation">,</span>headers <span class="token operator">=</span> HEADERS<span class="token punctuation">)</span>        <span class="token keyword">except</span> ReadTimeout<span class="token punctuation">:</span>            _Log<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">"Connection timeout...."</span><span class="token punctuation">)</span>        <span class="token keyword">except</span> ConnectionError<span class="token punctuation">:</span>            _Log<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">"Connection Error...."</span><span class="token punctuation">)</span>        <span class="token keyword">except</span> RequestException<span class="token punctuation">:</span>            _Log<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">"Unknown Error"</span><span class="token punctuation">)</span>        <span class="token comment"># res = response.content.decode('utf-8')</span>        soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">,</span><span class="token string">'html.parser'</span><span class="token punctuation">)</span>        waterFee <span class="token operator">=</span> soup<span class="token punctuation">.</span>select_one<span class="token punctuation">(</span><span class="token string">"#searchFrom &gt; div:nth-child(2) &gt; div:nth-child(1)"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'￥'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        lajiFee <span class="token operator">=</span> soup<span class="token punctuation">.</span>select_one<span class="token punctuation">(</span><span class="token string">"#searchFrom &gt; div:nth-child(2) &gt; div:nth-child(2)"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'￥'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        weiyueFee <span class="token operator">=</span> soup<span class="token punctuation">.</span>select_one<span class="token punctuation">(</span><span class="token string">"#searchFrom &gt; div:nth-child(2) &gt; div:nth-child(3)"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'￥'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        shangqijieyuFee <span class="token operator">=</span> soup<span class="token punctuation">.</span>select_one<span class="token punctuation">(</span><span class="token string">"#searchFrom &gt; div:nth-child(2) &gt; div:nth-child(4)"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'￥'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        qianfeiFee <span class="token operator">=</span> soup<span class="token punctuation">.</span>select_one<span class="token punctuation">(</span><span class="token string">"#searchFrom &gt; div:nth-child(2) &gt; div:nth-child(2)"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'￥'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        <span class="token comment">#_Log.info("waterFee=" + waterFee)</span>        self<span class="token punctuation">.</span>_state <span class="token operator">=</span> waterFee        self<span class="token punctuation">.</span>attributes<span class="token punctuation">[</span><span class="token string">'lajiFee'</span><span class="token punctuation">]</span> <span class="token operator">=</span> lajiFee        self<span class="token punctuation">.</span>attributes<span class="token punctuation">[</span><span class="token string">'weiyueFee'</span><span class="token punctuation">]</span> <span class="token operator">=</span> weiyueFee        self<span class="token punctuation">.</span>attributes<span class="token punctuation">[</span><span class="token string">'shangqijieyuFee'</span><span class="token punctuation">]</span> <span class="token operator">=</span> shangqijieyuFee        self<span class="token punctuation">.</span>attributes<span class="token punctuation">[</span><span class="token string">'qianfeiFee'</span><span class="token punctuation">]</span> <span class="token operator">=</span> qianfeiFee<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-附件下载"><a href="#5-附件下载" class="headerlink" title="5. 附件下载"></a>5. 附件下载</h3><p>附件可以去论坛上下载 <a href="https://bbs.hassbian.com/thread-11955-1-1.html">南京水费插件</a></p>]]></content>
      
      
      <categories>
          
          <category> 智能家居 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HA </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>少儿编程之Scratch</title>
      <link href="2020/07/06/scratch/"/>
      <url>2020/07/06/scratch/</url>
      
        <content type="html"><![CDATA[<h3 id="0-Scratch安装体验"><a href="#0-Scratch安装体验" class="headerlink" title="0.Scratch安装体验"></a>0.<strong>Scratch</strong>安装体验</h3><p>少儿编程软件<strong>Scratch</strong>是美国麻省理工提供的一款软件，Scratch3.0可以更好的支持外部硬件模块，并且能够与Makey,micro,We Do 2.0机器人，乐高 EV3机器人交互。</p><h3 id="1-软件下载"><a href="#1-软件下载" class="headerlink" title="1.软件下载"></a>1.软件下载</h3><p>从<a href="https://scratch.mit.edu/download">Scratch官网下载</a>，当然你也可以先从<a href="https://scratch.mit.edu/projects/editor/?tutorial=getStarted">这个地址</a>开始尝试。下载的页面和尝试的页面如下：</p><p><img src="/img/scratchdownload.png" alt="scratch下载"></p><p><img src="/img/scratchinfo.png" alt="scratch信息"></p><p>安装后的界面如下：</p><p><img src="/img/scratchdesktop.png" alt="scratch软件界面"></p><p>和网页版的基本没差。</p><h3 id="2-开始HelloWord"><a href="#2-开始HelloWord" class="headerlink" title="2.开始HelloWord"></a>2.开始HelloWord</h3><p>第一个小玩意：</p><p>代码：</p><p><img src="/img/helloworld.png" alt="helloworld图"></p><p>效果：</p><p><img src="/img/helloworld.gif" alt="helloworld"></p><h3 id="3-后续想法"><a href="#3-后续想法" class="headerlink" title="3.后续想法"></a>3.后续想法</h3><p>结合硬件做一些东西</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Scratch </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>智能家居体验与感受</title>
      <link href="2020/06/17/smartHome/"/>
      <url>2020/06/17/smartHome/</url>
      
        <content type="html"><![CDATA[<h2 id="0-入坑原因："><a href="#0-入坑原因：" class="headerlink" title="0.入坑原因："></a>0.入坑原因：</h2><p>​        家里装修完了，然后想自己搞点不一样的东西，能够让自己偷偷懒，还能够方便家里人使用。一开始啥也不知道，也不知道选择啥。也没有想到自己的做，想着用成熟的东西搭建自己的智能家居。正好家附近有个小米之家，去看了看。然后就入手了<a href="https://www.mi.com/buy/detail?product_id=5708&amp;cfrom=search">米家智能套装</a>，是最早一批的智能的东西。<img src="/img/mihome.jpg" alt="米家智能套装"></p><p>从这开始便开始了智能家居之旅。紧接着又入手了很多的智能设备和智能开关。现在的设备已经达到80个之多。</p><h2 id="1-米家APP体验"><a href="#1-米家APP体验" class="headerlink" title="1.米家APP体验"></a>1.米家APP体验</h2><p>​      有了这些智能设备之后，如果要让它们能够联合起来做一些事情，你得自己编写一个智能，条件可以是你现在的传感器或者他自己提供的一些东西，操作的设备只能是你的智能设备或者你的手机了，米家App基本上能够满足大部分人的需求了，但是有些像设置更细节的东西，他就爱莫能助了。</p><h2 id="2-入坑HomeAssistant"><a href="#2-入坑HomeAssistant" class="headerlink" title="2.入坑HomeAssistant"></a>2.入坑HomeAssistant</h2><p>​     有了这些硬件设备，但是又不甘于被米家App束缚，所以就开始找有没有别的啥能够支持这些智能硬件，找着找着找到HA，这个东西还是很强大的。可以自己编写传感器，可定制化程度非常高，能够完成很多米家App不能完成的事情。可以去<a href="https://bbs.hassbian.com/">瀚思彼岸</a> 论坛学习各个神的操作。</p><h2 id="3-如今的智能设备"><a href="#3-如今的智能设备" class="headerlink" title="3.如今的智能设备"></a>3.如今的智能设备</h2><p>​     现在家里的智能设备已经80多个了，很多已经接入了HA，但是还有少数设备没有接入其中。后面陆陆续续的接入到当中去。因为一开始没有买小米全家桶，所以很多的都是使用智能开关来控制设备的，所以家中的智能插座和智能开关比较多。</p><h2 id="4-后话"><a href="#4-后话" class="headerlink" title="4. 后话"></a>4. 后话</h2><p>​     智能家居还是要从开始进行规划，等自己以后有能力在买一套的时候，一定要彻头彻尾的搞一次真正的智能家居</p>]]></content>
      
      
      <categories>
          
          <category> 智能家居 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 智能家居 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建</title>
      <link href="2020/06/08/startPage/"/>
      <url>2020/06/08/startPage/</url>
      
        <content type="html"><![CDATA[<h2 id="搭建Hexo"><a href="#搭建Hexo" class="headerlink" title="搭建Hexo"></a>搭建Hexo</h2><p>之前自己搭建<a href="http://freefitter.com:1200/">wordpress</a>的博客，网上搜索下，还有人推荐Hexo的，然后就尝试着自己搞了个玩玩，发现并不复杂<br>参照了<a href="https://www.jianshu.com/p/4818be9093f5">这个教程</a>还有<a href="https://hexo.fluid-dev.com/docs/">官方的文档</a>。三下五除二干了起来。</p><h2 id="展示"><a href="#展示" class="headerlink" title="展示"></a>展示</h2><p>   搭建完成就是这样啦! <img src="/img/pre.png" alt="成果展示"> 赶脚还行。</p><h2 id="说在最后"><a href="#说在最后" class="headerlink" title="说在最后"></a>说在最后</h2><p>   自己瞎折腾，没事整点事</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
