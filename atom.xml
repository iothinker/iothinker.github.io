<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>宁静致远</title>
  
  <subtitle>静心整理/分享生活</subtitle>
  <link href="https://www.wangxingyang.com/atom.xml" rel="self"/>
  
  <link href="https://www.wangxingyang.com/"/>
  <updated>2024-09-24T15:03:08.190Z</updated>
  <id>https://www.wangxingyang.com/</id>
  
  <author>
    <name>彤爸比</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>智能家居小贴士：如何将电信和移动余额集成到Home Assistant</title>
    <link href="https://www.wangxingyang.com/phonefee.html"/>
    <image>https://freefitter.synology.me:9012/blog/20240924225838.png</image>
    
    <id>https://www.wangxingyang.com/phonefee.html</id>
    <published>2024-09-24T15:01:50.000Z</published>
    <updated>2024-09-24T15:03:08.190Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>现在的查询手机余额的方式多种多样，余额不足时也会发短信息提醒你，但是有时候就是想看看手机余额，如果只有一个运营商还好，多了的话可能查起来就比较繁琐了，所以就想把余额给监控起来，并且集成到Home Assistant中。</p></blockquote><h3 id="0-余额获取"><a href="#0-余额获取" class="headerlink" title="0.余额获取"></a>0.余额获取</h3><hr><p>身边有两个运营商分别时电信和移动，电信的之前是通过抓包的方式获取的余额，抓包的就不详细说了，主要说个移动的方式，因为这个会了，电信不用抓包也行的。</p><h4 id="移动余额获取思路"><a href="#移动余额获取思路" class="headerlink" title="移动余额获取思路"></a>移动余额获取思路</h4><ol><li>写一个快捷指令，给10086发送查话费的短信</li><li>在自动化中每天定时运行这个快捷指令</li><li>当收到10086的短信时，将短信内容推送到服务器</li><li>服务器将内容通过巴法云的MQTT发送到指定的主题</li><li>家里的Node-Red订阅这个主题，将内容解析并生成传感器至Home Assistant</li></ol><p>通过以上的步骤就能够把话费余额集成到HA中了。这边也可以简化的，可以直接把短信内容推送到Node-Red，然后解析内容生成传感器。为啥绕了这一圈呢，因为不想把Node-Red暴露到公网上，而且有现成的服务器，所以就绕了一圈。</p><h3 id="1-具体实施"><a href="#1-具体实施" class="headerlink" title="1.具体实施"></a>1.具体实施</h3><hr><p>在手机上做好基本的配置，编辑好查话费的快捷指令如下：<br><img src="https://freefitter.synology.me:9012/blog/20240924224359.png" alt="查询话费"><br>添加好两个自动化，一个用于发短息，一个用于推送接收到的短信内容。<br><img src="https://freefitter.synology.me:9012/blog/20240924224412.png" alt="自动化运行"><br>服务器上需要一个小脚本，用来做HTTP到MQTT的转换的，脚本如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> bottle <span class="token keyword">import</span> Bottle<span class="token punctuation">,</span> request<span class="token punctuation">,</span> response<span class="token keyword">import</span> paho<span class="token punctuation">.</span>mqtt<span class="token punctuation">.</span>client <span class="token keyword">as</span> mqtt<span class="token comment"># MQTT配置</span>MQTT_BROKER <span class="token operator">=</span> <span class="token string">'bemfa.com'</span>MQTT_PORT <span class="token operator">=</span> <span class="token number">9501</span>MQTT_TOPIC <span class="token operator">=</span> <span class="token string">'替换主题'</span><span class="token comment"># 创建MQTT客户端实例</span>client <span class="token operator">=</span> mqtt<span class="token punctuation">.</span>Client<span class="token punctuation">(</span>client_id<span class="token operator">=</span><span class="token string">"替换成巴法云的"</span><span class="token punctuation">)</span><span class="token comment"># 定义连接成功的回调函数</span><span class="token keyword">def</span> <span class="token function">on_connect</span><span class="token punctuation">(</span>client<span class="token punctuation">,</span> userdata<span class="token punctuation">,</span> flags<span class="token punctuation">,</span> rc<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> rc <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Connected successfully."</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Connected with result code "</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>rc<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 定义连接丢失的回调函数</span><span class="token keyword">def</span> <span class="token function">on_disconnect</span><span class="token punctuation">(</span>client<span class="token punctuation">,</span> userdata<span class="token punctuation">,</span> rc<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> rc <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Unexpected disconnection."</span><span class="token punctuation">)</span><span class="token comment"># 定义消息发布的回调函数</span><span class="token keyword">def</span> <span class="token function">on_publish</span><span class="token punctuation">(</span>client<span class="token punctuation">,</span> userdata<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Message published."</span><span class="token punctuation">)</span><span class="token comment"># 连接到MQTT服务器</span>client<span class="token punctuation">.</span>on_connect <span class="token operator">=</span> on_connectclient<span class="token punctuation">.</span>on_disconnect <span class="token operator">=</span> on_disconnectclient<span class="token punctuation">.</span>on_publish <span class="token operator">=</span> on_publishclient<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>MQTT_BROKER<span class="token punctuation">,</span> MQTT_PORT<span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token comment"># 启动MQTT客户端的循环，但不阻塞主线程</span>client<span class="token punctuation">.</span>loop_start<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># Bottle应用</span>app <span class="token operator">=</span> Bottle<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 定义HTTP POST路由，用于接收数据并将其发送到MQTT</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">'/publish'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">publish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 从请求中获取数据</span>    data <span class="token operator">=</span> request<span class="token punctuation">.</span>json    topic <span class="token operator">=</span> data<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'topic'</span><span class="token punctuation">,</span> MQTT_TOPIC<span class="token punctuation">)</span>    message <span class="token operator">=</span> data<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'message'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span>    <span class="token comment"># 检查MQTT连接状态</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> client<span class="token punctuation">.</span>is_connected<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"MQTT client is not connected. Attempting to reconnect..."</span><span class="token punctuation">)</span>        client<span class="token punctuation">.</span>reconnect<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># 等待一段时间，让重连逻辑生效</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>    <span class="token comment"># 再次检查连接状态</span>    <span class="token keyword">if</span> client<span class="token punctuation">.</span>is_connected<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 发布消息到MQTT</span>        result <span class="token operator">=</span> client<span class="token punctuation">.</span>publish<span class="token punctuation">(</span>topic<span class="token punctuation">,</span> message<span class="token punctuation">)</span>        status <span class="token operator">=</span> result<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> status <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            response<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token number">200</span>            <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'status'</span><span class="token punctuation">:</span> <span class="token string">'message published'</span><span class="token punctuation">}</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            response<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token number">500</span>            <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'status'</span><span class="token punctuation">:</span> <span class="token string">'message send failed with result code '</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">}</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        response<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token number">500</span>        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'status'</span><span class="token punctuation">:</span> <span class="token string">'mqtt client is not connected after reconnect attempt'</span><span class="token punctuation">}</span><span class="token comment"># 运行Bottle应用</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8989</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Node-Red中订阅主题后，解析收到的短信内容并生成传感器信息推送给HA的MQTT就完成了。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> message <span class="token operator">=</span> msg<span class="token punctuation">.</span>payload<span class="token punctuation">;</span><span class="token keyword">let</span> balancePattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">账户余额(\d+\.\d+)元</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span><span class="token keyword">let</span> match <span class="token operator">=</span> message<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>balancePattern<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 检查是否找到了匹配项</span><span class="token keyword">if</span> <span class="token punctuation">(</span>match<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// 提取余额</span>    totalMoney <span class="token operator">=</span> match<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    totalMoney <span class="token operator">=</span> <span class="token string">"-"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">let</span> dxphone_fee <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">"totalMoney"</span><span class="token operator">:</span> totalMoney<span class="token punctuation">}</span><span class="token keyword">const</span> prefix <span class="token operator">=</span> <span class="token string">"home/sensor/ydphone_fee"</span><span class="token keyword">let</span> msg_config <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>msg_config <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>        <span class="token string">"topic"</span><span class="token operator">:</span> <span class="token string">"homeassistant/sensor/ydphone_fee/config"</span><span class="token punctuation">,</span>        <span class="token string">"payload"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token string">"~"</span><span class="token operator">:</span> prefix<span class="token punctuation">,</span>            <span class="token string">"name"</span><span class="token operator">:</span> <span class="token string">"ydphone_fee"</span><span class="token punctuation">,</span>            <span class="token string">"state_topic"</span><span class="token operator">:</span> <span class="token string">"~/state"</span><span class="token punctuation">,</span>            <span class="token string">"unique_id"</span><span class="token operator">:</span> <span class="token string">"ydphone_fee"</span><span class="token punctuation">,</span>            <span class="token string">"icon"</span><span class="token operator">:</span> <span class="token string">"mdi:cellphone"</span><span class="token punctuation">,</span>            <span class="token string">"json_attributes_topic"</span><span class="token operator">:</span> <span class="token string">"~/info"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        <span class="token string">"topic"</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>prefix<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/state</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>        <span class="token string">"payload"</span><span class="token operator">:</span> dxphone_fee<span class="token punctuation">.</span>totalMoney    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        <span class="token string">"topic"</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>prefix<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/info</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>        <span class="token string">"payload"</span><span class="token operator">:</span> dxphone_fee    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token keyword">return</span> <span class="token punctuation">[</span>msg_config<span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-成果展示"><a href="#2-成果展示" class="headerlink" title="2.成果展示"></a>2.成果展示</h3><hr><p>最后两个余额都能获取到了，看到这个，你就知道话费每天都花了多少。<br><img src="https://freefitter.synology.me:9012/blog/20240924225036.png" alt="电信余额"></p><p><img src="https://freefitter.synology.me:9012/blog/20240924225049.png" alt="移动余额"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;现在的查询手机余额的方式多种多样，余额不足时也会发短信息提醒你，但是有时候就是想看看手机余额，如果只有一个运营商还好，多了的话可能查起来就比较繁琐了，所以就想把余额给监控起来，并且集成到Home Assistant中。&lt;/p&gt;
&lt;/blockquo</summary>
      
    
    
    
    <category term="智能家居" scheme="https://www.wangxingyang.com/categories/%E6%99%BA%E8%83%BD%E5%AE%B6%E5%B1%85/"/>
    
    
    <category term="捷径" scheme="https://www.wangxingyang.com/tags/%E6%8D%B7%E5%BE%84/"/>
    
    <category term="Home Assistant" scheme="https://www.wangxingyang.com/tags/Home-Assistant/"/>
    
    <category term="话费" scheme="https://www.wangxingyang.com/tags/%E8%AF%9D%E8%B4%B9/"/>
    
  </entry>
  
  <entry>
    <title>智能家庭能耗管理：Home Assistant国网电费数据集成与展示指南</title>
    <link href="https://www.wangxingyang.com/sgcc-electricity-ha.html"/>
    <image>https://freefitter.synology.me:9012/blog/20240924213945.png</image>
    
    <id>https://www.wangxingyang.com/sgcc-electricity-ha.html</id>
    <published>2024-09-24T13:28:28.000Z</published>
    <updated>2024-09-24T13:41:07.792Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>之前电费是通过<strong>国网江苏电力营业厅</strong>获取的，但是现在这个小程序已经停止服务了，导致现在不能够正常抓取了。之后就闲置了很久，后来看到有个<strong>网上国网</strong>的集成，但是十分卡，而且动不动就失败，之后在Github上找了找，发现了一个好用的项目。</p></blockquote><h3 id="0-搭建"><a href="#0-搭建" class="headerlink" title="0.搭建"></a>0.搭建</h3><hr><p><a href="https://github.com/ARC-MX/sgcc_electricity_new">sgcc_electricity_new</a>的项目的文档中已经描述的很清楚了，按照流程走很轻松的就能够搭起来。搭建完成后就能在1Panel中看到这个容器了。运行时间比较久，等他运行完成你就能在HA中看到它生成的实体了。</p><p><img src="https://freefitter.synology.me:9012/blog/20240924085011.png" alt="容器"></p><p>homeassistant实体名称如下</p><table><thead><tr><th>实体entity_id</th><th>说明</th></tr></thead><tbody><tr><td>sensor.last_electricity_usage</td><td>最近一天用电量，单位KWH、度。属性含present_date（查询电量代表的日期）</td></tr><tr><td>sensor.electricity_charge_balance</td><td>预付费显示电费余额，反之显示上月应交电费，单位元</td></tr><tr><td>sensor.yearly_electricity_usage</td><td>今年总用电量，单位KWH、度。</td></tr><tr><td>sensor.yearly_electricity_charge</td><td>今年总用电费用，单位元</td></tr><tr><td>sensor.month_electricity_usage</td><td>最近一天用电量，单位KWH、度。属性含present_date（查询电量代表的日期）</td></tr><tr><td>sensor.month_electricity_charge</td><td>上月总用电费用，单位元 属性含present_date（查询电量代表的日期）</td></tr></tbody></table><h3 id="1-修改"><a href="#1-修改" class="headerlink" title="1.修改"></a>1.修改</h3><hr><p>目前项目中没有结清的标识，光靠余额是不能判断出费用是否结清，所以改了一下代码，加了一个结清的标识。需要修改 <strong>data_fetcher.py</strong> ，增加一个结清的标志，获取的代码如下，其他的地方也要相应增加，照着原来的写即可。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">_get_eletric_state</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> driver<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        text <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>CSS_SELECTOR<span class="token punctuation">,</span> <span class="token string">".amt.light .amttxt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text        flag <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">if</span> text <span class="token operator">==</span> <span class="token string">"当期已结清"</span> <span class="token keyword">else</span> <span class="token number">1</span>        <span class="token keyword">return</span> flag    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">None</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-展示"><a href="#2-展示" class="headerlink" title="2.展示"></a>2.展示</h3><hr><p>最后集成的结果如下图：<br>这是首页展示的简要信息汇总，能够看出是否结清，如果没结清会显示欠费金额。</p><p><img src="https://freefitter.synology.me:9012/blog/20240924090610.png" alt="简要信息"></p><p>这是总的电费详细信息，可以查看家里的和电车的电费使用情况。</p><p><img src="https://freefitter.synology.me:9012/blog/20240924090709.png" alt="详细信息"></p><p>下图是每日的用电量，这个不能看到当天的，最新更新的是两天前的数据。</p><p><img src="https://freefitter.synology.me:9012/blog/20240924090935.png" alt="用电曲线"></p><h3 id="3-总结"><a href="#3-总结" class="headerlink" title="3.总结"></a>3.总结</h3><hr><p>安装这个后香橙派的内存占用有些许提升，当他跑起来是会冲到70多，但是还在能接受的范围。有些事情只要决定去做了，不管多久，多么困难，只要坚持了，总会有结果的。</p><p><img src="https://freefitter.synology.me:9012/blog/20240924093032.png" alt="资源使用"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;之前电费是通过&lt;strong&gt;国网江苏电力营业厅&lt;/strong&gt;获取的，但是现在这个小程序已经停止服务了，导致现在不能够正常抓取了。之后就闲置了很久，后来看到有个&lt;strong&gt;网上国网&lt;/strong&gt;的集成，但是十分卡，而且动不动就失败，之后</summary>
      
    
    
    
    <category term="智能家居" scheme="https://www.wangxingyang.com/categories/%E6%99%BA%E8%83%BD%E5%AE%B6%E5%B1%85/"/>
    
    
    <category term="ha" scheme="https://www.wangxingyang.com/tags/ha/"/>
    
    <category term="国家电网" scheme="https://www.wangxingyang.com/tags/%E5%9B%BD%E5%AE%B6%E7%94%B5%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>applewatch</title>
    <link href="https://www.wangxingyang.com/applewatch.html"/>
    <image>https://freefitter.synology.me:9012/blog/20240923213145.png</image>
    
    <id>https://www.wangxingyang.com/applewatch.html</id>
    <published>2024-09-23T14:37:17.000Z</published>
    <updated>2024-09-23T14:38:35.288Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>之前带的5代手表电池已经不行了，即使这样还预估折抵了300块，这次出了新款就准备买来尝尝鲜，第一时间就预定了一个铝合金的亮黑色，已经带了几天了，来分享一下自己的拆箱和使用感受。</p></blockquote><p><img src="https://freefitter.synology.me:9012/blog/20240923213145.png" alt="封面"></p><h3 id="0-拆箱-amp-上手"><a href="#0-拆箱-amp-上手" class="headerlink" title="0.拆箱&amp;上手"></a>0.拆箱&amp;上手</h3><hr><p>能接受预订的第一时间就预约了，20号拿到的手表，拆完之后第一感觉就是大而亮，比之前的那个大太多了，外观上没有啥明显的变化，主要的变化是扬声器的部分变成网状的了，而且可以独立播放下载的音乐了，试了一下，可以听。厚度的话确实薄了，肉眼可见。</p><p><img src="https://freefitter.synology.me:9012/blog/20240923215339.png" alt="订单"><br>外包装<br><img src="https://freefitter.synology.me:9012/blog/20240923220052.png" alt="包装盒"><br>拆开后盒子里是表带和手表本体<br><img src="https://freefitter.synology.me:9012/blog/20240923220121.png" alt="拆开后"><br>拿出本体自动点亮开机。亮黑色和之前买的iPhone 7 是一样的。<br><img src="https://freefitter.synology.me:9012/blog/20240923220202.png" alt="本体"><br>上手的样子，表盘是之前手表的表盘，显示家里水电燃气的欠费金额，用电数据之前的不好使了，所以每显示，不过最近搞好了，后面再说，下面是油价，最后是博客的浏览量。<br><img src="https://freefitter.synology.me:9012/blog/20240923220222.png" alt="上手效果"></p><h3 id="1-使用感受"><a href="#1-使用感受" class="headerlink" title="1.使用感受"></a>1.使用感受</h3><hr><p>最最最直观的感受是电池比以前续航长了，之前每天一充，早上带的晚上回家就要没电了，很难受，现在带一天回家还有80的电，还是记录了活动的前提下。也带他睡着它测了一下睡眠，一晚上下来也没损耗多少，但是我还是喜欢把它充的满满的。当然这些是在我关闭了一些功能的前提下。关闭了噪声监测，洗手监测，Siri唤醒还有全天候显示。使用下来还是不错的。<br><img src="https://freefitter.synology.me:9012/blog/20240923221431.png" alt="睡眠数据"></p><h3 id="2-总结"><a href="#2-总结" class="headerlink" title="2.总结"></a>2.总结</h3><hr><p>总的来说使用还是不错的，还有其他的功能等后续使用再补充。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;之前带的5代手表电池已经不行了，即使这样还预估折抵了300块，这次出了新款就准备买来尝尝鲜，第一时间就预定了一个铝合金的亮黑色，已经带了几天了，来分享一下自己的拆箱和使用感受。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http</summary>
      
    
    
    
    <category term="生活" scheme="https://www.wangxingyang.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="apple watch" scheme="https://www.wangxingyang.com/tags/apple-watch/"/>
    
  </entry>
  
  <entry>
    <title>迎接祖国华诞：打造独一无二的国庆蛋糕</title>
    <link href="https://www.wangxingyang.com/schoolwork240922.html"/>
    <image>https://freefitter.synology.me:9012/blog/f04dc85ecf0887e6ae25c7c40b5cac90.jpg</image>
    
    <id>https://www.wangxingyang.com/schoolwork240922.html</id>
    <published>2024-09-23T13:21:21.000Z</published>
    <updated>2024-09-23T13:26:58.878Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>马上国庆节了，幼儿园开展了 <strong><code>童心向党，喜迎二十大</code></strong> 的活动，向小朋友们征集创意作品。在参看了网上思路，最终决定做个蛋糕，老师提到的<code>坦克</code>、<code>火箭</code>、<code>国旗</code>等元素都有包含。</p></blockquote><h3 id="0-材料准备"><a href="#0-材料准备" class="headerlink" title="0.材料准备"></a>0.材料准备</h3><hr><ol><li>瓦楞纸</li><li>肥叔锅贴打包盒</li><li>肯德基小吃拼盘打包盒</li><li>热熔胶枪</li><li>超轻黏土</li><li>8寸蛋糕托盘<h3 id="1-开始制作"><a href="#1-开始制作" class="headerlink" title="1.开始制作"></a>1.开始制作</h3></li></ol><hr><p>把两个盒子叠起来，然后用瓦楞纸给他们包裹好，接着再搞一些装饰就行了。</p><h5 id="这是初始的样子"><a href="#这是初始的样子" class="headerlink" title="这是初始的样子"></a>这是初始的样子</h5><p><img src="https://freefitter.synology.me:9012/blog/4f15ab19f141d119eb584176a94ad514.jpg" alt="初始样子"></p><h5 id="这是包裹之后的样子"><a href="#这是包裹之后的样子" class="headerlink" title="这是包裹之后的样子"></a>这是包裹之后的样子</h5><p><img src="https://freefitter.synology.me:9012/blog/d287b41b85fd150c366a7c643a876b41.jpg" alt="包裹之后的"></p><h5 id="这是完成之后的样子"><a href="#这是完成之后的样子" class="headerlink" title="这是完成之后的样子"></a>这是完成之后的样子</h5><p><img src="https://freefitter.synology.me:9012/blog/f04dc85ecf0887e6ae25c7c40b5cac90.jpg" alt="成品"></p><h3 id="2-总结"><a href="#2-总结" class="headerlink" title="2.总结"></a>2.总结</h3><hr><p>构思材料和找材料是比较耗时的，等确定好了之后就是制作了，虽然有些繁琐，但是还是乐在其中的，期间宝宝也在旁边帮忙，加油打气。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;马上国庆节了，幼儿园开展了 &lt;strong&gt;&lt;code&gt;童心向党，喜迎二十大&lt;/code&gt;&lt;/strong&gt; 的活动，向小朋友们征集创意作品。在参看了网上思路，最终决定做个蛋糕，老师提到的&lt;code&gt;坦克&lt;/code&gt;、&lt;code&gt;火箭&lt;/code</summary>
      
    
    
    
    <category term="生活" scheme="https://www.wangxingyang.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="国庆" scheme="https://www.wangxingyang.com/tags/%E5%9B%BD%E5%BA%86/"/>
    
    <category term="幼儿园" scheme="https://www.wangxingyang.com/tags/%E5%B9%BC%E5%84%BF%E5%9B%AD/"/>
    
    <category term="手工" scheme="https://www.wangxingyang.com/tags/%E6%89%8B%E5%B7%A5/"/>
    
  </entry>
  
  <entry>
    <title>解锁iOS捷径：用大模型优化“看谁听的准”的游戏体验</title>
    <link href="https://www.wangxingyang.com/gameof20240908.html"/>
    <image>https://freefitter.synology.me:9012/blog/202409082157024.png</image>
    
    <id>https://www.wangxingyang.com/gameof20240908.html</id>
    <published>2024-09-08T12:43:54.000Z</published>
    <updated>2024-09-08T13:58:59.429Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>看谁听的准游戏介绍：<br>给孩子读一组词，规定某一标准让他认真听(如听出类别、用途、生活习性等)，当听到属于这一标准的词时，就拍手或者蹲下等。</p></blockquote><h3 id="0-想法"><a href="#0-想法" class="headerlink" title="0.想法"></a>0.想法</h3><hr><p>如果让家长自己说出一组词，那么可能时不时有卡顿，但是如果有程序或者捷径能帮助实现这个功能，那家长不仅能和孩子一起游戏，还解放了自己，何乐而不为呢。所以就用了手机里自带的捷径写了一个，能够朗读一组词语。但是词语还是要自己想，这边就借助了大模型，让他去生成这些词语就行了。 <a href="https://www.icloud.com/shortcuts/dae6f093552941a1890ee556d57d78d5">看谁听的准链接</a>是捷径的下载地址。如果不好复制，识别下方二维码获取。</p><p><img src="https://freefitter.synology.me:9012/blog/httpswww.icloud.comshortcutsdae6f093552941a1890ee556d57d78d5.png" alt="捷径二维码"></p><p><img src="https://freefitter.synology.me:9012/blog/202409082101108.png" alt="捷径截图"></p><p>接下来是这些词怎么来，这些文字可以通过大模型来生成，可以参照我的提示词。</p><p><img src="https://freefitter.synology.me:9012/blog/202409082116783.png" alt="对话截图"></p><pre class="line-numbers language-none"><code class="language-none">现在有一个叫看谁听的准的游戏，给出一系列的词语，然后规定一个规则，比如听到动物就拍手，现在需要你帮我生成一些词语，这些词语包含水果，蔬菜，动物，植物，家具，家电这些方面的。每个种类必须涵盖，并且每个种类需要穿插随机，每个种类的词语数量要差不多，输出的结果不需要换行和数字序号，用逗号隔开，总数不得低于50个，不能重复。生成后再按照上面的分类输出一份答案。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样只要把上面生成的词语复制到捷径中即可。</p><h3 id="1-总结"><a href="#1-总结" class="headerlink" title="1.总结"></a>1.总结</h3><hr><p>在与孩子游戏的过程中，利用自己的优势解放自己，给孩子另一种游戏体验也未尝不是一件有意思的事情。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;看谁听的准游戏介绍：&lt;br&gt;给孩子读一组词，规定某一标准让他认真听(如听出类别、用途、生活习性等)，当听到属于这一标准的词时，就拍手或者蹲下等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;0-想法&quot;&gt;&lt;a href=&quot;#0-想法&quot; cla</summary>
      
    
    
    
    <category term="教程" scheme="https://www.wangxingyang.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="捷径" scheme="https://www.wangxingyang.com/tags/%E6%8D%B7%E5%BE%84/"/>
    
    <category term="大模型" scheme="https://www.wangxingyang.com/tags/%E5%A4%A7%E6%A8%A1%E5%9E%8B/"/>
    
    <category term="亲子游戏" scheme="https://www.wangxingyang.com/tags/%E4%BA%B2%E5%AD%90%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
</feed>
